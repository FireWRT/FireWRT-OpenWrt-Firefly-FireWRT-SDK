Index: linux-3.18.11/drivers/mmc/host/mtk-mmc/sd.c
===================================================================
--- linux-3.18.11.orig/drivers/mmc/host/mtk-mmc/sd.c	2015-04-30 11:10:42.992460868 +0800
+++ linux-3.18.11/drivers/mmc/host/mtk-mmc/sd.c	2015-04-30 11:13:20.804457598 +0800
@@ -74,7 +74,7 @@
 #define RALINK_SYSCTL_BASE		0xb0000000
 #define RALINK_MSDC_BASE		0xb0130000
 #endif
-#define IRQ_SDC			22	/*FIXME*/
+#define IRQ_SDC			28	/*FIXME*/
 
 #include <asm/dma.h>
 /* end of +++ */
@@ -2726,15 +2726,12 @@
 
 static int msdc_drv_probe(struct platform_device *pdev)
 {
-    struct resource *res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-    __iomem void *base;
     struct mmc_host *mmc;
     struct resource *mem;
     struct msdc_host *host;
     struct msdc_hw *hw;
+    unsigned long base;
     int ret, irq;
- 
-    pdev->dev.platform_data = &msdc0_hw;
   
     /* Allocate MMC host for this device */
     mmc = mmc_alloc_host(sizeof(struct msdc_host), &pdev->dev);
@@ -2743,12 +2740,15 @@
     hw   = (struct msdc_hw*)pdev->dev.platform_data;
     mem  = platform_get_resource(pdev, IORESOURCE_MEM, 0);
     irq  = platform_get_irq(pdev, 0);
+    base = mem->start;
 
     //BUG_ON((!hw) || (!mem) || (irq < 0)); /* --- by chhung */
     
-    base = devm_ioremap_resource(&pdev->dev, res);
-    if (IS_ERR(base))
-        return PTR_ERR(base);
+    mem = request_mem_region(mem->start, mem->end - mem->start + 1, DRV_NAME);
+    if (mem == NULL) {
+        mmc_free_host(mmc);
+        return -EBUSY;
+    }
 
     /* Set host parameters to mmc */
     mmc->ops        = &mt_msdc_ops;
@@ -2791,7 +2791,7 @@
     host->id        = pdev->id;
     host->error     = 0;
     host->irq       = irq;    
-    host->base      = (unsigned long) base;
+    host->base      = base;
     host->mclk      = 0;                   /* mclk: the request clock of mmc sub-system */
     host->hclk      = hclks[hw->clk_src];  /* hclk: clock of clock source to msdc controller */
     host->sclk      = 0;                   /* sclk: the really clock after divition */
@@ -2956,12 +2956,6 @@
 }
 #endif
 
-static const struct of_device_id mt7620_sdhci_match[] = {
-	{ .compatible = "ralink,mt7620-sdhci" },
-	{},
-};
-MODULE_DEVICE_TABLE(of, rt288x_wdt_match);
-
 static struct platform_driver mt_msdc_driver = {
     .probe   = msdc_drv_probe,
     .remove  = msdc_drv_remove,
@@ -2972,7 +2966,6 @@
     .driver  = {
         .name  = DRV_NAME,
         .owner = THIS_MODULE,
-	.of_match_table = mt7620_sdhci_match,
     },
 };
 
@@ -3016,7 +3009,7 @@
 //#endif
 }
     sdr_write32((volatile u32*)(RALINK_SYSCTL_BASE + 0x60), reg);
-    //platform_device_register(&mtk_sd_device);
+    platform_device_register(&mtk_sd_device);
 /* end of +++ */
 
     ret = platform_driver_register(&mt_msdc_driver);
@@ -3034,7 +3027,7 @@
 
 static void __exit mt_msdc_exit(void)
 {
-//    platform_device_unregister(&mtk_sd_device);
+    platform_device_unregister(&mtk_sd_device);
     platform_driver_unregister(&mt_msdc_driver);
 }
 
